name: CICD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Debug Info
      run: |
        echo "Docker version:"
        docker --version
        echo "Docker Compose version:"
        docker-compose --version
        echo "Node version:"
        node --version
        echo "NPM version:"
        npm --version

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

    - name: Start services
      run: docker-compose -f docker-compose.yml up -d

    - name: Run backend tests
      run: docker-compose -f docker-compose.yml exec node-express npm test

    - name: Run frontend tests
      run: docker-compose -f docker-compose.yml exec nextjs npm test

    - name: Stop and remove services
      run: docker-compose -f docker-compose.yml down
